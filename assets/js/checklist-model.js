angular.module("checklist-model",[]).directive("checklistModel",["$parse","$compile",function(e,t){function n(e,t,n){if(angular.isArray(e))for(var r=e.length;r--;)if(n(e[r],t))return!0;return!1}function r(e,t,r){return e=angular.isArray(e)?e:[],n(e,t,r)||e.push(t),e}function o(e,t,n){if(angular.isArray(e))for(var r=e.length;r--;)if(n(e[r],t)){e.splice(r,1);break}return e}function a(a,i,s){function m(e,t){var n=l(a.$parent);angular.isFunction(p)&&(t===!0?p(a.$parent,r(n,e,g)):p(a.$parent,o(n,e,g)))}function h(e,t){return f&&f(a)===!1?void m(d,a[s.ngModel]):void(a[s.ngModel]=n(e,d,g))}var c=s.checklistModel;s.$set("checklistModel",null),t(i)(a),s.$set("checklistModel",c);var l=e(c),p=l.assign,u=e(s.checklistChange),f=e(s.checklistBeforeChange),d=s.checklistValue?e(s.checklistValue)(a.$parent):s.value,g=angular.equals;if(s.hasOwnProperty("checklistComparator"))if("."==s.checklistComparator[0]){var v=s.checklistComparator.substring(1);g=function(e,t){return e[v]===t[v]}}else g=e(s.checklistComparator)(a.$parent);a.$watch(s.ngModel,function(e,t){if(e!==t){if(f&&f(a)===!1)return void(a[s.ngModel]=n(l(a.$parent),d,g));m(d,e),u&&u(a)}}),angular.isFunction(a.$parent.$watchCollection)?a.$parent.$watchCollection(c,h):a.$parent.$watch(c,h,!0)}return{restrict:"A",priority:1e3,terminal:!0,scope:!0,compile:function(e,t){if(("INPUT"!==e[0].tagName||"checkbox"!==t.type)&&"MD-CHECKBOX"!==e[0].tagName&&!t.btnCheckbox)throw'checklist-model should be applied to `input[type="checkbox"]` or `md-checkbox`.';if(!t.checklistValue&&!t.value)throw"You should provide `value` or `checklist-value`.";return t.ngModel||t.$set("ngModel","checked"),a}}}]);